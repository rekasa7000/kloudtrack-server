{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:07:40.873Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:09:15.006Z"}
{"level":"debug","message":"Query: SELECT 1","service":"weather-station-iot","timestamp":"2025-05-22T03:09:35.541Z"}
{"level":"debug","message":"Duration: 65ms","service":"weather-station-iot","timestamp":"2025-05-22T03:09:35.543Z"}
{"level":"debug","message":"Query: BEGIN","service":"weather-station-iot","timestamp":"2025-05-22T03:09:35.591Z"}
{"level":"debug","message":"Duration: 49ms","service":"weather-station-iot","timestamp":"2025-05-22T03:09:35.592Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","service":"weather-station-iot","timestamp":"2025-05-22T03:09:35.640Z"}
{"level":"debug","message":"Duration: 49ms","service":"weather-station-iot","timestamp":"2025-05-22T03:09:35.642Z"}
{"level":"debug","message":"Query: SELECT COUNT(*) AS \"_count._all\" FROM (SELECT \"public\".\"stations\".\"station_id\" FROM \"public\".\"stations\" WHERE 1=1 OFFSET $1) AS \"sub\"","service":"weather-station-iot","timestamp":"2025-05-22T03:09:35.741Z"}
{"level":"debug","message":"Duration: 100ms","service":"weather-station-iot","timestamp":"2025-05-22T03:09:35.742Z"}
{"level":"debug","message":"Query: COMMIT","service":"weather-station-iot","timestamp":"2025-05-22T03:09:35.791Z"}
{"level":"debug","message":"Duration: 49ms","service":"weather-station-iot","timestamp":"2025-05-22T03:09:35.793Z"}
{"level":"error","message":"Database error: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:11:33\n\n   8 }\n   9 async findAll(skip, take) {\n  10     const [stations, total] = await Promise.all([\n→ 11         this.prisma.station.findMany({\n               skip: NaN,\n               include: {\n                 certificate: true,\n                 user: true,\n                 organization: true\n               },\n               orderBy: {\n                 createdAt: \"desc\"\n               },\n             + take: Int\n             })\n\nArgument `take` is missing.","service":"weather-station-iot","target":"station.findMany","timestamp":"2025-05-22T03:09:35.808Z"}
{"clientVersion":"6.7.0","level":"error","message":"Failed to get all stations: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:11:33\n\n   8 }\n   9 async findAll(skip, take) {\n  10     const [stations, total] = await Promise.all([\n→ 11         this.prisma.station.findMany({\n               skip: NaN,\n               include: {\n                 certificate: true,\n                 user: true,\n                 organization: true\n               },\n               orderBy: {\n                 createdAt: \"desc\"\n               },\n             + take: Int\n             })\n\nArgument `take` is missing.","name":"PrismaClientValidationError","service":"weather-station-iot","stack":"PrismaClientValidationError: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:11:33\n\n   8 }\n   9 async findAll(skip, take) {\n  10     const [stations, total] = await Promise.all([\n→ 11         this.prisma.station.findMany({\n               skip: NaN,\n               include: {\n                 certificate: true,\n                 user: true,\n                 organization: true\n               },\n               orderBy: {\n                 createdAt: \"desc\"\n               },\n             + take: Int\n             })\n\nArgument `take` is missing.\n    at An (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:32:1363)\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7102)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async Promise.all (index 0)\n    at async StationRepository.findAll (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:10:35)\n    at async StationService.getAllStations (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:42:26)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:15:26","timestamp":"2025-05-22T03:09:35.809Z"}
{"level":"error","message":"[GET] /api/v1/station >> 500: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:11:33\n\n   8 }\n   9 async findAll(skip, take) {\n  10     const [stations, total] = await Promise.all([\n→ 11         this.prisma.station.findMany({\n               skip: NaN,\n               include: {\n                 certificate: true,\n                 user: true,\n                 organization: true\n               },\n               orderBy: {\n                 createdAt: \"desc\"\n               },\n             + take: Int\n             })\n\nArgument `take` is missing.","service":"weather-station-iot","stack":"PrismaClientValidationError: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:11:33\n\n   8 }\n   9 async findAll(skip, take) {\n  10     const [stations, total] = await Promise.all([\n→ 11         this.prisma.station.findMany({\n               skip: NaN,\n               include: {\n                 certificate: true,\n                 user: true,\n                 organization: true\n               },\n               orderBy: {\n                 createdAt: \"desc\"\n               },\n             + take: Int\n             })\n\nArgument `take` is missing.\n    at An (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:32:1363)\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7102)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async Promise.all (index 0)\n    at async StationRepository.findAll (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:10:35)\n    at async StationService.getAllStations (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:42:26)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:15:26","timestamp":"2025-05-22T03:09:35.810Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:13:35.215Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:15:10.704Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:16:51.294Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:17:18.262Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:17:23.935Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:17:43.986Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:18:01.425Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:18:19.888Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:18:57.935Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:19:06.553Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:19:07.613Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:19:15.348Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:29:47.937Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:29:54.411Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:34:02.924Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T03:47:08.386Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:27:51.320Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:27:59.555Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:28:03.963Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:42:06.795Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:47:43.420Z"}
{"level":"debug","message":"Query: SELECT 1","service":"weather-station-iot","timestamp":"2025-05-22T05:51:16.046Z"}
{"level":"debug","message":"Duration: 50ms","service":"weather-station-iot","timestamp":"2025-05-22T05:51:16.047Z"}
{"level":"debug","message":"Query: BEGIN","service":"weather-station-iot","timestamp":"2025-05-22T05:51:16.095Z"}
{"level":"debug","message":"Duration: 48ms","service":"weather-station-iot","timestamp":"2025-05-22T05:51:16.096Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","service":"weather-station-iot","timestamp":"2025-05-22T05:51:16.147Z"}
{"level":"debug","message":"Duration: 51ms","service":"weather-station-iot","timestamp":"2025-05-22T05:51:16.147Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"email\" = $1 AND 1=1) LIMIT $2 OFFSET $3","service":"weather-station-iot","timestamp":"2025-05-22T05:51:16.252Z"}
{"level":"debug","message":"Duration: 102ms","service":"weather-station-iot","timestamp":"2025-05-22T05:51:16.253Z"}
{"level":"debug","message":"Query: COMMIT","service":"weather-station-iot","timestamp":"2025-05-22T05:51:16.301Z"}
{"level":"debug","message":"Duration: 47ms","service":"weather-station-iot","timestamp":"2025-05-22T05:51:16.302Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:52:21.247Z"}
{"level":"debug","message":"Query: SELECT 1","service":"weather-station-iot","timestamp":"2025-05-22T05:53:11.104Z"}
{"level":"debug","message":"Duration: 59ms","service":"weather-station-iot","timestamp":"2025-05-22T05:53:11.105Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:19:65\n\n  16     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  17 }\n  18 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 19 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T05:53:11.114Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:53:51.069Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:53:56.672Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:54:02.424Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:54:09.613Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:54:16.467Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:19:65\n\n  16     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  17 }\n  18 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 19 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T05:54:18.438Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T05:54:47.506Z"}
{"level":"debug","message":"Query: SELECT 1","service":"weather-station-iot","timestamp":"2025-05-22T05:59:44.169Z"}
{"level":"debug","message":"Duration: 48ms","service":"weather-station-iot","timestamp":"2025-05-22T05:59:44.171Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:19:65\n\n  16     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  17 }\n  18 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 19 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T05:59:44.181Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:19:65\n\n  16     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  17 }\n  18 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 19 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T05:59:45.511Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:19:65\n\n  16     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  17 }\n  18 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 19 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T05:59:46.758Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:01:06.240Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:01:34.126Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:19:65\n\n  16     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  17 }\n  18 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 19 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T06:01:38.791Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:02:13.978Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:02:25.739Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:02:43.720Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:03:10.294Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:03:46.923Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:19:65\n\n  16     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  17 }\n  18 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 19 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T06:03:49.201Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:04:09.165Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:04:22.471Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:19:65\n\n  16     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  17 }\n  18 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 19 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T06:04:24.612Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:04:35.709Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:04:39.740Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:07:43.824Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:08:01.529Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:08:11.142Z"}
{"level":"debug","message":"Query: SELECT 1","service":"weather-station-iot","timestamp":"2025-05-22T06:08:58.735Z"}
{"level":"debug","message":"Duration: 111ms","service":"weather-station-iot","timestamp":"2025-05-22T06:08:58.736Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:22:69\n\n  19     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  20 }\n  21 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 22 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T06:08:58.745Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:09:49.791Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:23:69\n\n  20 }\n  21 console.log(token);\n  22 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 23 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T06:09:53.653Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:12:37.445Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:13:11.742Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:13:12.699Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:13:28.182Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:15:08.716Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:15:13.134Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:16:00.684Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:16:08.298Z"}
{"level":"debug","message":"Query: BEGIN","service":"weather-station-iot","timestamp":"2025-05-22T06:16:19.725Z"}
{"level":"debug","message":"Duration: 48ms","service":"weather-station-iot","timestamp":"2025-05-22T06:16:19.727Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","service":"weather-station-iot","timestamp":"2025-05-22T06:16:19.773Z"}
{"level":"debug","message":"Duration: 47ms","service":"weather-station-iot","timestamp":"2025-05-22T06:16:19.773Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"email\" = $1 AND 1=1) LIMIT $2 OFFSET $3","service":"weather-station-iot","timestamp":"2025-05-22T06:16:19.869Z"}
{"level":"debug","message":"Duration: 96ms","service":"weather-station-iot","timestamp":"2025-05-22T06:16:19.870Z"}
{"level":"debug","message":"Query: COMMIT","service":"weather-station-iot","timestamp":"2025-05-22T06:16:19.917Z"}
{"level":"debug","message":"Duration: 47ms","service":"weather-station-iot","timestamp":"2025-05-22T06:16:19.918Z"}
{"level":"debug","message":"Query: SELECT 1","service":"weather-station-iot","timestamp":"2025-05-22T06:16:33.186Z"}
{"level":"debug","message":"Duration: 78ms","service":"weather-station-iot","timestamp":"2025-05-22T06:16:33.186Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:23:69\n\n  20 }\n  21 console.log(token);\n  22 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 23 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T06:16:33.195Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:17:27.430Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:23:69\n\n  20 }\n  21 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n  22 console.log(\"DECODED JWT\", decoded);\n→ 23 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","service":"weather-station-iot","target":"user.findUnique","timestamp":"2025-05-22T06:17:29.451Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:18:12.629Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:18:32.814Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:18:47.541Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:18:54.742Z"}
{"level":"debug","message":"Query: BEGIN","service":"weather-station-iot","timestamp":"2025-05-22T06:18:57.670Z"}
{"level":"debug","message":"Duration: 85ms","service":"weather-station-iot","timestamp":"2025-05-22T06:18:57.671Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","service":"weather-station-iot","timestamp":"2025-05-22T06:18:57.727Z"}
{"level":"debug","message":"Duration: 56ms","service":"weather-station-iot","timestamp":"2025-05-22T06:18:57.727Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","service":"weather-station-iot","timestamp":"2025-05-22T06:18:57.841Z"}
{"level":"debug","message":"Duration: 113ms","service":"weather-station-iot","timestamp":"2025-05-22T06:18:57.842Z"}
{"level":"debug","message":"Query: COMMIT","service":"weather-station-iot","timestamp":"2025-05-22T06:18:57.897Z"}
{"level":"debug","message":"Duration: 56ms","service":"weather-station-iot","timestamp":"2025-05-22T06:18:57.898Z"}
{"level":"debug","message":"Query: BEGIN","service":"weather-station-iot","timestamp":"2025-05-22T06:18:57.958Z"}
{"level":"debug","message":"Duration: 57ms","service":"weather-station-iot","timestamp":"2025-05-22T06:18:57.959Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","service":"weather-station-iot","timestamp":"2025-05-22T06:18:58.015Z"}
{"level":"debug","message":"Duration: 56ms","service":"weather-station-iot","timestamp":"2025-05-22T06:18:58.015Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","service":"weather-station-iot","timestamp":"2025-05-22T06:18:58.128Z"}
{"level":"debug","message":"Duration: 113ms","service":"weather-station-iot","timestamp":"2025-05-22T06:18:58.129Z"}
{"level":"debug","message":"Query: COMMIT","service":"weather-station-iot","timestamp":"2025-05-22T06:18:58.185Z"}
{"level":"debug","message":"Duration: 56ms","service":"weather-station-iot","timestamp":"2025-05-22T06:18:58.185Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:19:10.744Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:19:40.886Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:19:41.916Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:19:42.515Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:20:31.074Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:20:47.644Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:20:51.388Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:21:04.053Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:22:52.907Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:22:57.414Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:23:03.934Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:24:32.244Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:40:53.749Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","service":"weather-station-iot","target":"quaint::pooled","timestamp":"2025-05-22T06:40:58.770Z"}
{"level":"debug","message":"Query: BEGIN","service":"weather-station-iot","timestamp":"2025-05-22T06:41:02.332Z"}
{"level":"debug","message":"Duration: 152ms","service":"weather-station-iot","timestamp":"2025-05-22T06:41:02.333Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","service":"weather-station-iot","timestamp":"2025-05-22T06:41:02.523Z"}
{"level":"debug","message":"Duration: 191ms","service":"weather-station-iot","timestamp":"2025-05-22T06:41:02.524Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","service":"weather-station-iot","timestamp":"2025-05-22T06:41:02.769Z"}
{"level":"debug","message":"Duration: 245ms","service":"weather-station-iot","timestamp":"2025-05-22T06:41:02.770Z"}
{"level":"debug","message":"Query: COMMIT","service":"weather-station-iot","timestamp":"2025-05-22T06:41:02.826Z"}
{"level":"debug","message":"Duration: 57ms","service":"weather-station-iot","timestamp":"2025-05-22T06:41:02.827Z"}
{"level":"debug","message":"Query: BEGIN","service":"weather-station-iot","timestamp":"2025-05-22T06:41:03.018Z"}
{"level":"debug","message":"Duration: 189ms","service":"weather-station-iot","timestamp":"2025-05-22T06:41:03.019Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","service":"weather-station-iot","timestamp":"2025-05-22T06:41:03.075Z"}
{"level":"debug","message":"Duration: 56ms","service":"weather-station-iot","timestamp":"2025-05-22T06:41:03.075Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","service":"weather-station-iot","timestamp":"2025-05-22T06:41:03.309Z"}
{"level":"debug","message":"Duration: 233ms","service":"weather-station-iot","timestamp":"2025-05-22T06:41:03.309Z"}
{"level":"debug","message":"Query: COMMIT","service":"weather-station-iot","timestamp":"2025-05-22T06:41:03.539Z"}
{"level":"debug","message":"Duration: 230ms","service":"weather-station-iot","timestamp":"2025-05-22T06:41:03.540Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:46:54.787Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:46:59.577Z"}
{"level":"debug","message":"Duration: 65ms","timestamp":"2025-05-22T06:46:59.578Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:46:59.640Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T06:46:59.641Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:46:59.771Z"}
{"level":"debug","message":"Duration: 130ms","timestamp":"2025-05-22T06:46:59.772Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:46:59.835Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T06:46:59.835Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:46:59.906Z"}
{"level":"debug","message":"Duration: 67ms","timestamp":"2025-05-22T06:46:59.907Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:46:59.970Z"}
{"level":"debug","message":"Duration: 64ms","timestamp":"2025-05-22T06:46:59.971Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:47:00.099Z"}
{"level":"debug","message":"Duration: 128ms","timestamp":"2025-05-22T06:47:00.100Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:47:00.164Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T06:47:00.164Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T06:48:06.350Z"}
{"level":"debug","message":"Duration: 65ms","timestamp":"2025-05-22T06:48:06.350Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:48:06.416Z"}
{"level":"debug","message":"Duration: 66ms","timestamp":"2025-05-22T06:48:06.417Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:48:06.480Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T06:48:06.481Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:48:06.617Z"}
{"level":"debug","message":"Duration: 136ms","timestamp":"2025-05-22T06:48:06.618Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:48:06.682Z"}
{"level":"debug","message":"Duration: 64ms","timestamp":"2025-05-22T06:48:06.682Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:48:06.759Z"}
{"level":"debug","message":"Duration: 65ms","timestamp":"2025-05-22T06:48:06.759Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:48:06.823Z"}
{"level":"debug","message":"Duration: 64ms","timestamp":"2025-05-22T06:48:06.823Z"}
{"level":"debug","message":"Query: SELECT COUNT(*) AS \"_count._all\" FROM (SELECT \"public\".\"stations\".\"station_id\" FROM \"public\".\"stations\" WHERE 1=1 OFFSET $1) AS \"sub\"","timestamp":"2025-05-22T06:48:06.954Z"}
{"level":"debug","message":"Duration: 131ms","timestamp":"2025-05-22T06:48:06.955Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:48:07.018Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T06:48:07.019Z"}
{"level":"error","message":"Database error: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:11:33\n\n   8 }\n   9 async findAll(skip, take) {\n  10     const [stations, total] = await Promise.all([\n→ 11         this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","target":"station.findMany","timestamp":"2025-05-22T06:48:07.114Z"}
{"clientVersion":"6.7.0","level":"error","message":"Failed to get all stations: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:11:33\n\n   8 }\n   9 async findAll(skip, take) {\n  10     const [stations, total] = await Promise.all([\n→ 11         this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","name":"PrismaClientUnknownRequestError","stack":"PrismaClientUnknownRequestError: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:11:33\n\n   8 }\n   9 async findAll(skip, take) {\n  10     const [stations, total] = await Promise.all([\n→ 11         this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7649)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async Promise.all (index 0)\n    at async StationRepository.findAll (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:10:35)\n    at async StationService.getAllStations (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:42:26)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:15:26","timestamp":"2025-05-22T06:48:07.115Z"}
{"level":"error","message":"[GET] /api/v1/station >> 500: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:11:33\n\n   8 }\n   9 async findAll(skip, take) {\n  10     const [stations, total] = await Promise.all([\n→ 11         this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","stack":"PrismaClientUnknownRequestError: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:11:33\n\n   8 }\n   9 async findAll(skip, take) {\n  10     const [stations, total] = await Promise.all([\n→ 11         this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7649)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async Promise.all (index 0)\n    at async StationRepository.findAll (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:10:35)\n    at async StationService.getAllStations (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:42:26)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:15:26","timestamp":"2025-05-22T06:48:07.116Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:49:40.988Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:49:42.567Z"}
{"level":"debug","message":"Duration: 51ms","timestamp":"2025-05-22T06:49:42.570Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:49:42.615Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:49:42.616Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:49:42.714Z"}
{"level":"debug","message":"Duration: 98ms","timestamp":"2025-05-22T06:49:42.715Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:49:42.763Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:49:42.763Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:49:42.815Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:49:42.815Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:49:42.863Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:49:42.863Z"}
{"level":"debug","message":"Query: SELECT COUNT(*) AS \"_count._all\" FROM (SELECT \"public\".\"stations\".\"station_id\" FROM \"public\".\"stations\" WHERE 1=1 OFFSET $1) AS \"sub\"","timestamp":"2025-05-22T06:49:42.961Z"}
{"level":"debug","message":"Duration: 98ms","timestamp":"2025-05-22T06:49:42.962Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:49:43.010Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:49:43.010Z"}
{"level":"error","message":"Database error: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","target":"station.findMany","timestamp":"2025-05-22T06:49:43.084Z"}
{"clientVersion":"6.7.0","level":"error","message":"Failed to get all stations: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","name":"PrismaClientUnknownRequestError","stack":"PrismaClientUnknownRequestError: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7649)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async Promise.all (index 0)\n    at async StationRepository.findAll (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:12:35)\n    at async StationService.getAllStations (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:42:26)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:15:26","timestamp":"2025-05-22T06:49:43.084Z"}
{"level":"error","message":"[GET] /api/v1/station >> 500: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","stack":"PrismaClientUnknownRequestError: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7649)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async Promise.all (index 0)\n    at async StationRepository.findAll (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:12:35)\n    at async StationService.getAllStations (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:42:26)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:15:26","timestamp":"2025-05-22T06:49:43.085Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:50:23.198Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:50:24.905Z"}
{"level":"debug","message":"Duration: 129ms","timestamp":"2025-05-22T06:50:24.906Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:50:24.960Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:50:24.961Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:50:25.072Z"}
{"level":"debug","message":"Duration: 110ms","timestamp":"2025-05-22T06:50:25.073Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:50:25.127Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:50:25.128Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:50:25.189Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:50:25.190Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:50:25.245Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:50:25.246Z"}
{"level":"debug","message":"Query: SELECT COUNT(*) AS \"_count._all\" FROM (SELECT \"public\".\"stations\".\"station_id\" FROM \"public\".\"stations\" WHERE 1=1 OFFSET $1) AS \"sub\"","timestamp":"2025-05-22T06:50:25.357Z"}
{"level":"debug","message":"Duration: 111ms","timestamp":"2025-05-22T06:50:25.357Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:50:25.414Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:50:25.414Z"}
{"level":"error","message":"Database error: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","target":"station.findMany","timestamp":"2025-05-22T06:50:25.502Z"}
{"clientVersion":"6.7.0","level":"error","message":"Failed to get all stations: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","name":"PrismaClientUnknownRequestError","stack":"PrismaClientUnknownRequestError: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7649)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async Promise.all (index 0)\n    at async StationRepository.findAll (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:12:35)\n    at async StationService.getAllStations (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:43:26)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:15:26","timestamp":"2025-05-22T06:50:25.504Z"}
{"level":"error","message":"[GET] /api/v1/station >> 500: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","stack":"PrismaClientUnknownRequestError: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7649)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async Promise.all (index 0)\n    at async StationRepository.findAll (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:12:35)\n    at async StationService.getAllStations (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:43:26)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:15:26","timestamp":"2025-05-22T06:50:25.506Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:50:39.413Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:50:40.594Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:50:40.594Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:50:40.651Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:50:40.653Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:50:40.767Z"}
{"level":"debug","message":"Duration: 115ms","timestamp":"2025-05-22T06:50:40.768Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:50:40.824Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:50:40.824Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:50:40.887Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:50:40.888Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:50:40.943Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:50:40.944Z"}
{"level":"debug","message":"Query: SELECT COUNT(*) AS \"_count._all\" FROM (SELECT \"public\".\"stations\".\"station_id\" FROM \"public\".\"stations\" WHERE 1=1 OFFSET $1) AS \"sub\"","timestamp":"2025-05-22T06:50:41.058Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T06:50:41.059Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:50:41.114Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:50:41.114Z"}
{"level":"error","message":"Database error: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","target":"station.findMany","timestamp":"2025-05-22T06:50:41.188Z"}
{"clientVersion":"6.7.0","level":"error","message":"Failed to get all stations: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","name":"PrismaClientUnknownRequestError","stack":"PrismaClientUnknownRequestError: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7649)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async Promise.all (index 0)\n    at async StationRepository.findAll (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:12:35)\n    at async StationService.getAllStations (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:43:26)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:15:26","timestamp":"2025-05-22T06:50:41.190Z"}
{"level":"error","message":"[GET] /api/v1/station >> 500: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")","stack":"PrismaClientUnknownRequestError: \nInvalid `this.prisma.station.findMany()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:13:33\n\n  10 console.log(\"SKIP: \", skip);\n  11 console.log(\"TAKE: \", take);\n  12 const [stations, total] = await Promise.all([\n→ 13     this.prisma.station.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -3\")\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7649)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async Promise.all (index 0)\n    at async StationRepository.findAll (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:12:35)\n    at async StationService.getAllStations (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:43:26)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:15:26","timestamp":"2025-05-22T06:50:41.194Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:51:04.746Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:51:07.603Z"}
{"level":"debug","message":"Duration: 136ms","timestamp":"2025-05-22T06:51:07.604Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:51:07.660Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:51:07.660Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:51:07.773Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T06:51:07.774Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:51:07.830Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:51:07.830Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:51:07.891Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:51:07.892Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:51:07.948Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:51:07.949Z"}
{"level":"debug","message":"Query: SELECT COUNT(*) AS \"_count._all\" FROM (SELECT \"public\".\"stations\".\"station_id\" FROM \"public\".\"stations\" WHERE 1=1 OFFSET $1) AS \"sub\"","timestamp":"2025-05-22T06:51:08.061Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T06:51:08.062Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:51:08.119Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:51:08.120Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:51:08.200Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:51:08.201Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:51:08.249Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:51:08.249Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"stations\".\"station_id\", \"public\".\"stations\".\"organizationId\", \"public\".\"stations\".\"station_name\", \"public\".\"stations\".\"station_type\"::text, \"public\".\"stations\".\"location\", \"public\".\"stations\".\"barangay\", \"public\".\"stations\".\"city\", \"public\".\"stations\".\"province\", \"public\".\"stations\".\"country\", \"public\".\"stations\".\"serial_code\", \"public\".\"stations\".\"elevation\", \"public\".\"stations\".\"station_picture\", \"public\".\"stations\".\"is_active\", \"public\".\"stations\".\"activated_at\", \"public\".\"stations\".\"firmware_version\", \"public\".\"stations\".\"created_by_user_id\", \"public\".\"stations\".\"created_at\", \"public\".\"stations\".\"updated_at\" FROM \"public\".\"stations\" WHERE 1=1 ORDER BY \"public\".\"stations\".\"created_at\" DESC LIMIT $1 OFFSET $2","timestamp":"2025-05-22T06:51:08.350Z"}
{"level":"debug","message":"Duration: 101ms","timestamp":"2025-05-22T06:51:08.351Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"certificates\".\"certificate_id\", \"public\".\"certificates\".\"key_path\", \"public\".\"certificates\".\"cert_path\", \"public\".\"certificates\".\"aws_certificate_id\", \"public\".\"certificates\".\"aws_certificate_arn\", \"public\".\"certificates\".\"certificate_status\"::text, \"public\".\"certificates\".\"station_id\", \"public\".\"certificates\".\"fingerprint\", \"public\".\"certificates\".\"uploaded_by_user_id\", \"public\".\"certificates\".\"expires_at\", \"public\".\"certificates\".\"created_at\", \"public\".\"certificates\".\"updated_at\" FROM \"public\".\"certificates\" WHERE \"public\".\"certificates\".\"station_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:51:08.450Z"}
{"level":"debug","message":"Duration: 99ms","timestamp":"2025-05-22T06:51:08.451Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:51:08.551Z"}
{"level":"debug","message":"Duration: 100ms","timestamp":"2025-05-22T06:51:08.552Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:51:08.600Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:51:08.600Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:51:16.372Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:51:39.939Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:51:47.278Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:53:03.321Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:53:19.193Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:54:09.957Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:54:19.382Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T06:55:09.455Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:55:09.456Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:55:09.504Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:55:09.505Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:55:09.552Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:55:09.554Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:55:09.652Z"}
{"level":"debug","message":"Duration: 99ms","timestamp":"2025-05-22T06:55:09.653Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:55:09.700Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:55:09.701Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:55:09.755Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:55:09.756Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:55:09.803Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:55:09.804Z"}
{"level":"debug","message":"Query: INSERT INTO \"public\".\"stations\" (\"station_name\",\"station_type\",\"location\",\"barangay\",\"city\",\"province\",\"country\",\"serial_code\",\"elevation\",\"station_picture\",\"is_active\",\"activated_at\",\"firmware_version\",\"created_by_user_id\",\"created_at\",\"updated_at\") VALUES ($1,CAST($2::text AS \"public\".\"station_type_enum\"),$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16) RETURNING \"public\".\"stations\".\"station_id\"","timestamp":"2025-05-22T06:55:09.920Z"}
{"level":"debug","message":"Duration: 116ms","timestamp":"2025-05-22T06:55:09.920Z"}
{"level":"debug","message":"Query: ROLLBACK","timestamp":"2025-05-22T06:55:09.968Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:55:09.968Z"}
{"level":"error","message":"Database error: \nInvalid `this.prisma.station.create()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:31:36\n\n  28     };\n  29 }\n  30 async create(data, userId) {\n→ 31     return this.prisma.station.create(\nUnique constraint failed on the fields: (`serial_code`)","target":"station.create","timestamp":"2025-05-22T06:55:09.976Z"}
{"clientVersion":"6.7.0","code":"P2002","level":"error","message":"Failed to create station: \nInvalid `this.prisma.station.create()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:31:36\n\n  28     };\n  29 }\n  30 async create(data, userId) {\n→ 31     return this.prisma.station.create(\nUnique constraint failed on the fields: (`serial_code`)","meta":{"modelName":"Station","target":["serial_code"]},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `this.prisma.station.create()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:31:36\n\n  28     };\n  29 }\n  30 async create(data, userId) {\n→ 31     return this.prisma.station.create(\nUnique constraint failed on the fields: (`serial_code`)\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7459)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async StationService.createStation (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:12:29)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:22:28","timestamp":"2025-05-22T06:55:09.976Z"}
{"level":"error","message":"[POST] /api/v1/station >> 500: \nInvalid `this.prisma.station.create()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:31:36\n\n  28     };\n  29 }\n  30 async create(data, userId) {\n→ 31     return this.prisma.station.create(\nUnique constraint failed on the fields: (`serial_code`)","stack":"PrismaClientKnownRequestError: \nInvalid `this.prisma.station.create()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/repository.js:31:36\n\n  28     };\n  29 }\n  30 async create(data, userId) {\n→ 31     return this.prisma.station.create(\nUnique constraint failed on the fields: (`serial_code`)\n    at zn.handleRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:7459)\n    at zn.handleAndLogRequestError (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6784)\n    at zn.request (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:124:6491)\n    at async l (/home/rekasa/Projects/Kloudtrack/server/node_modules/.prisma/client/runtime/library.js:133:9778)\n    at async StationService.createStation (/home/rekasa/Projects/Kloudtrack/server/dist/modules/station/service.js:12:29)\n    at async /home/rekasa/Projects/Kloudtrack/server/dist/modules/station/controller.js:22:28","timestamp":"2025-05-22T06:55:09.978Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T06:55:27.849Z"}
{"level":"debug","message":"Duration: 50ms","timestamp":"2025-05-22T06:55:27.849Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:55:27.901Z"}
{"level":"debug","message":"Duration: 51ms","timestamp":"2025-05-22T06:55:27.902Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:55:27.949Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:55:27.950Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:55:28.053Z"}
{"level":"debug","message":"Duration: 103ms","timestamp":"2025-05-22T06:55:28.054Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:55:28.106Z"}
{"level":"debug","message":"Duration: 53ms","timestamp":"2025-05-22T06:55:28.107Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:55:28.180Z"}
{"level":"debug","message":"Duration: 70ms","timestamp":"2025-05-22T06:55:28.180Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:55:28.233Z"}
{"level":"debug","message":"Duration: 53ms","timestamp":"2025-05-22T06:55:28.233Z"}
{"level":"debug","message":"Query: INSERT INTO \"public\".\"stations\" (\"station_name\",\"station_type\",\"location\",\"barangay\",\"city\",\"province\",\"country\",\"serial_code\",\"elevation\",\"station_picture\",\"is_active\",\"activated_at\",\"firmware_version\",\"created_by_user_id\",\"created_at\",\"updated_at\") VALUES ($1,CAST($2::text AS \"public\".\"station_type_enum\"),$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16) RETURNING \"public\".\"stations\".\"station_id\"","timestamp":"2025-05-22T06:55:28.516Z"}
{"level":"debug","message":"Duration: 283ms","timestamp":"2025-05-22T06:55:28.517Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"stations\".\"station_id\", \"public\".\"stations\".\"organizationId\", \"public\".\"stations\".\"station_name\", \"public\".\"stations\".\"station_type\"::text, \"public\".\"stations\".\"location\", \"public\".\"stations\".\"barangay\", \"public\".\"stations\".\"city\", \"public\".\"stations\".\"province\", \"public\".\"stations\".\"country\", \"public\".\"stations\".\"serial_code\", \"public\".\"stations\".\"elevation\", \"public\".\"stations\".\"station_picture\", \"public\".\"stations\".\"is_active\", \"public\".\"stations\".\"activated_at\", \"public\".\"stations\".\"firmware_version\", \"public\".\"stations\".\"created_by_user_id\", \"public\".\"stations\".\"created_at\", \"public\".\"stations\".\"updated_at\" FROM \"public\".\"stations\" WHERE \"public\".\"stations\".\"station_id\" = $1 LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:55:28.632Z"}
{"level":"debug","message":"Duration: 115ms","timestamp":"2025-05-22T06:55:28.632Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"certificates\".\"certificate_id\", \"public\".\"certificates\".\"key_path\", \"public\".\"certificates\".\"cert_path\", \"public\".\"certificates\".\"aws_certificate_id\", \"public\".\"certificates\".\"aws_certificate_arn\", \"public\".\"certificates\".\"certificate_status\"::text, \"public\".\"certificates\".\"station_id\", \"public\".\"certificates\".\"fingerprint\", \"public\".\"certificates\".\"uploaded_by_user_id\", \"public\".\"certificates\".\"expires_at\", \"public\".\"certificates\".\"created_at\", \"public\".\"certificates\".\"updated_at\" FROM \"public\".\"certificates\" WHERE \"public\".\"certificates\".\"station_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:55:28.734Z"}
{"level":"debug","message":"Duration: 101ms","timestamp":"2025-05-22T06:55:28.734Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:55:28.836Z"}
{"level":"debug","message":"Duration: 101ms","timestamp":"2025-05-22T06:55:28.836Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:55:28.889Z"}
{"level":"debug","message":"Duration: 52ms","timestamp":"2025-05-22T06:55:28.889Z"}
{"level":"info","message":"Station created: Mt. Cloud AWS 4 (ID: 3)","timestamp":"2025-05-22T06:55:28.890Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T06:55:59.879Z"}
{"level":"debug","message":"Duration: 51ms","timestamp":"2025-05-22T06:55:59.880Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:55:59.929Z"}
{"level":"debug","message":"Duration: 49ms","timestamp":"2025-05-22T06:55:59.929Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:55:59.977Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:55:59.978Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:56:00.075Z"}
{"level":"debug","message":"Duration: 97ms","timestamp":"2025-05-22T06:56:00.076Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:56:00.123Z"}
{"level":"debug","message":"Duration: 47ms","timestamp":"2025-05-22T06:56:00.124Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:56:00.176Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:56:00.176Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:56:00.223Z"}
{"level":"debug","message":"Duration: 47ms","timestamp":"2025-05-22T06:56:00.223Z"}
{"level":"debug","message":"Query: SELECT COUNT(*) AS \"_count._all\" FROM (SELECT \"public\".\"stations\".\"station_id\" FROM \"public\".\"stations\" WHERE 1=1 OFFSET $1) AS \"sub\"","timestamp":"2025-05-22T06:56:00.320Z"}
{"level":"debug","message":"Duration: 96ms","timestamp":"2025-05-22T06:56:00.321Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:56:00.368Z"}
{"level":"debug","message":"Duration: 47ms","timestamp":"2025-05-22T06:56:00.369Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:56:00.571Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:00.571Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:56:00.626Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:00.627Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"stations\".\"station_id\", \"public\".\"stations\".\"organizationId\", \"public\".\"stations\".\"station_name\", \"public\".\"stations\".\"station_type\"::text, \"public\".\"stations\".\"location\", \"public\".\"stations\".\"barangay\", \"public\".\"stations\".\"city\", \"public\".\"stations\".\"province\", \"public\".\"stations\".\"country\", \"public\".\"stations\".\"serial_code\", \"public\".\"stations\".\"elevation\", \"public\".\"stations\".\"station_picture\", \"public\".\"stations\".\"is_active\", \"public\".\"stations\".\"activated_at\", \"public\".\"stations\".\"firmware_version\", \"public\".\"stations\".\"created_by_user_id\", \"public\".\"stations\".\"created_at\", \"public\".\"stations\".\"updated_at\" FROM \"public\".\"stations\" WHERE 1=1 ORDER BY \"public\".\"stations\".\"created_at\" DESC LIMIT $1 OFFSET $2","timestamp":"2025-05-22T06:56:00.740Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T06:56:00.741Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"certificates\".\"certificate_id\", \"public\".\"certificates\".\"key_path\", \"public\".\"certificates\".\"cert_path\", \"public\".\"certificates\".\"aws_certificate_id\", \"public\".\"certificates\".\"aws_certificate_arn\", \"public\".\"certificates\".\"certificate_status\"::text, \"public\".\"certificates\".\"station_id\", \"public\".\"certificates\".\"fingerprint\", \"public\".\"certificates\".\"uploaded_by_user_id\", \"public\".\"certificates\".\"expires_at\", \"public\".\"certificates\".\"created_at\", \"public\".\"certificates\".\"updated_at\" FROM \"public\".\"certificates\" WHERE \"public\".\"certificates\".\"station_id\" IN ($1,$2) OFFSET $3","timestamp":"2025-05-22T06:56:00.854Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T06:56:00.854Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:56:00.967Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T06:56:00.967Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:56:01.023Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:01.023Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:56:07.906Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:07.907Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:56:07.962Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:07.963Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:56:08.075Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T06:56:08.076Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:56:08.131Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:08.132Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:56:08.183Z"}
{"level":"debug","message":"Duration: 47ms","timestamp":"2025-05-22T06:56:08.184Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:56:08.197Z"}
{"level":"debug","message":"Duration: 62ms","timestamp":"2025-05-22T06:56:08.198Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:56:08.231Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:56:08.232Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:56:08.253Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:08.253Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"stations\".\"station_id\", \"public\".\"stations\".\"organizationId\", \"public\".\"stations\".\"station_name\", \"public\".\"stations\".\"station_type\"::text, \"public\".\"stations\".\"location\", \"public\".\"stations\".\"barangay\", \"public\".\"stations\".\"city\", \"public\".\"stations\".\"province\", \"public\".\"stations\".\"country\", \"public\".\"stations\".\"serial_code\", \"public\".\"stations\".\"elevation\", \"public\".\"stations\".\"station_picture\", \"public\".\"stations\".\"is_active\", \"public\".\"stations\".\"activated_at\", \"public\".\"stations\".\"firmware_version\", \"public\".\"stations\".\"created_by_user_id\", \"public\".\"stations\".\"created_at\", \"public\".\"stations\".\"updated_at\" FROM \"public\".\"stations\" WHERE 1=1 ORDER BY \"public\".\"stations\".\"created_at\" DESC LIMIT $1 OFFSET $2","timestamp":"2025-05-22T06:56:08.328Z"}
{"level":"debug","message":"Duration: 96ms","timestamp":"2025-05-22T06:56:08.329Z"}
{"level":"debug","message":"Query: SELECT COUNT(*) AS \"_count._all\" FROM (SELECT \"public\".\"stations\".\"station_id\" FROM \"public\".\"stations\" WHERE 1=1 OFFSET $1) AS \"sub\"","timestamp":"2025-05-22T06:56:08.365Z"}
{"level":"debug","message":"Duration: 111ms","timestamp":"2025-05-22T06:56:08.365Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:56:08.420Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:08.421Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"certificates\".\"certificate_id\", \"public\".\"certificates\".\"key_path\", \"public\".\"certificates\".\"cert_path\", \"public\".\"certificates\".\"aws_certificate_id\", \"public\".\"certificates\".\"aws_certificate_arn\", \"public\".\"certificates\".\"certificate_status\"::text, \"public\".\"certificates\".\"station_id\", \"public\".\"certificates\".\"fingerprint\", \"public\".\"certificates\".\"uploaded_by_user_id\", \"public\".\"certificates\".\"expires_at\", \"public\".\"certificates\".\"created_at\", \"public\".\"certificates\".\"updated_at\" FROM \"public\".\"certificates\" WHERE \"public\".\"certificates\".\"station_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:56:08.427Z"}
{"level":"debug","message":"Duration: 98ms","timestamp":"2025-05-22T06:56:08.427Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:56:08.524Z"}
{"level":"debug","message":"Duration: 96ms","timestamp":"2025-05-22T06:56:08.524Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:56:08.573Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:56:08.573Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T06:56:28.528Z"}
{"level":"debug","message":"Duration: 148ms","timestamp":"2025-05-22T06:56:28.529Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:56:28.578Z"}
{"level":"debug","message":"Duration: 49ms","timestamp":"2025-05-22T06:56:28.579Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:56:28.627Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:56:28.628Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:56:28.726Z"}
{"level":"debug","message":"Duration: 98ms","timestamp":"2025-05-22T06:56:28.726Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:56:28.773Z"}
{"level":"debug","message":"Duration: 47ms","timestamp":"2025-05-22T06:56:28.773Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:56:28.823Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:56:28.824Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T06:56:28.831Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:28.831Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:56:28.871Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T06:56:28.872Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:56:28.887Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:28.887Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:56:28.943Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:28.943Z"}
{"level":"debug","message":"Query: SELECT COUNT(*) AS \"_count._all\" FROM (SELECT \"public\".\"stations\".\"station_id\" FROM \"public\".\"stations\" WHERE 1=1 OFFSET $1) AS \"sub\"","timestamp":"2025-05-22T06:56:28.968Z"}
{"level":"debug","message":"Duration: 96ms","timestamp":"2025-05-22T06:56:28.969Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:56:29.016Z"}
{"level":"debug","message":"Duration: 47ms","timestamp":"2025-05-22T06:56:29.017Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"stations\".\"station_id\", \"public\".\"stations\".\"organizationId\", \"public\".\"stations\".\"station_name\", \"public\".\"stations\".\"station_type\"::text, \"public\".\"stations\".\"location\", \"public\".\"stations\".\"barangay\", \"public\".\"stations\".\"city\", \"public\".\"stations\".\"province\", \"public\".\"stations\".\"country\", \"public\".\"stations\".\"serial_code\", \"public\".\"stations\".\"elevation\", \"public\".\"stations\".\"station_picture\", \"public\".\"stations\".\"is_active\", \"public\".\"stations\".\"activated_at\", \"public\".\"stations\".\"firmware_version\", \"public\".\"stations\".\"created_by_user_id\", \"public\".\"stations\".\"created_at\", \"public\".\"stations\".\"updated_at\" FROM \"public\".\"stations\" WHERE 1=1 ORDER BY \"public\".\"stations\".\"created_at\" DESC LIMIT $1 OFFSET $2","timestamp":"2025-05-22T06:56:29.055Z"}
{"level":"debug","message":"Duration: 111ms","timestamp":"2025-05-22T06:56:29.055Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"certificates\".\"certificate_id\", \"public\".\"certificates\".\"key_path\", \"public\".\"certificates\".\"cert_path\", \"public\".\"certificates\".\"aws_certificate_id\", \"public\".\"certificates\".\"aws_certificate_arn\", \"public\".\"certificates\".\"certificate_status\"::text, \"public\".\"certificates\".\"station_id\", \"public\".\"certificates\".\"fingerprint\", \"public\".\"certificates\".\"uploaded_by_user_id\", \"public\".\"certificates\".\"expires_at\", \"public\".\"certificates\".\"created_at\", \"public\".\"certificates\".\"updated_at\" FROM \"public\".\"certificates\" WHERE \"public\".\"certificates\".\"station_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:56:29.167Z"}
{"level":"debug","message":"Duration: 111ms","timestamp":"2025-05-22T06:56:29.167Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:56:29.281Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T06:56:29.281Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:56:29.336Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:56:29.337Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T06:57:07.700Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:57:07.700Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:57:07.756Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:57:07.756Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:57:07.812Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:57:07.812Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:57:07.924Z"}
{"level":"debug","message":"Duration: 111ms","timestamp":"2025-05-22T06:57:07.924Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:57:07.979Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:57:07.980Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T06:57:28.227Z"}
{"level":"debug","message":"Duration: 168ms","timestamp":"2025-05-22T06:57:28.228Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:57:28.283Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:57:28.283Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:57:28.342Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T06:57:28.343Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:57:28.458Z"}
{"level":"debug","message":"Duration: 115ms","timestamp":"2025-05-22T06:57:28.458Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:57:28.513Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T06:57:28.514Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T06:57:50.816Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:57:58.486Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:57:58.486Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:57:58.542Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:57:58.543Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:57:58.656Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T06:57:58.656Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:57:58.713Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:57:58.713Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:57:58.775Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:57:58.776Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:57:58.834Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T06:57:58.834Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE 1=1 OFFSET $1","timestamp":"2025-05-22T06:57:58.951Z"}
{"level":"debug","message":"Duration: 116ms","timestamp":"2025-05-22T06:57:58.951Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:57:59.065Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T06:57:59.065Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:57:59.122Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:57:59.123Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T06:58:18.663Z"}
{"level":"debug","message":"Duration: 117ms","timestamp":"2025-05-22T06:58:18.664Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:58:18.731Z"}
{"level":"debug","message":"Duration: 67ms","timestamp":"2025-05-22T06:58:18.731Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:58:18.788Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:58:18.788Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:58:18.900Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T06:58:18.901Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:58:18.957Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:58:18.958Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:58:19.022Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T06:58:19.022Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:58:19.078Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:58:19.078Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:58:19.192Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T06:58:19.192Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:58:19.305Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T06:58:19.306Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:58:19.363Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:58:19.364Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:58:19.424Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T06:58:19.424Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:58:19.481Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:58:19.481Z"}
{"level":"debug","message":"Query: DELETE FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) RETURNING \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\"","timestamp":"2025-05-22T06:58:19.597Z"}
{"level":"debug","message":"Duration: 115ms","timestamp":"2025-05-22T06:58:19.597Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:58:19.655Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T06:58:19.655Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:58:23.516Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T06:58:23.517Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:58:23.574Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:58:23.575Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:58:23.688Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T06:58:23.689Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:58:23.745Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:58:23.745Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:58:23.806Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:58:23.806Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:58:23.862Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:58:23.863Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:58:23.987Z"}
{"level":"debug","message":"Duration: 124ms","timestamp":"2025-05-22T06:58:23.987Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:58:24.044Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:58:24.044Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T06:59:45.609Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T06:59:45.609Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:59:45.670Z"}
{"level":"debug","message":"Duration: 60ms","timestamp":"2025-05-22T06:59:45.670Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:59:45.727Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:59:45.727Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T06:59:45.841Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T06:59:45.842Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:59:45.899Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:59:45.899Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T06:59:45.960Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T06:59:45.960Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T06:59:46.016Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T06:59:46.017Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE 1=1 OFFSET $1","timestamp":"2025-05-22T06:59:46.130Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T06:59:46.130Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T06:59:46.245Z"}
{"level":"debug","message":"Duration: 115ms","timestamp":"2025-05-22T06:59:46.245Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T06:59:46.308Z"}
{"level":"debug","message":"Duration: 62ms","timestamp":"2025-05-22T06:59:46.308Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T07:00:37.119Z"}
{"level":"debug","message":"Duration: 60ms","timestamp":"2025-05-22T07:00:37.120Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:37.177Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:37.178Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:37.234Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:37.234Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:00:37.421Z"}
{"level":"debug","message":"Duration: 187ms","timestamp":"2025-05-22T07:00:37.422Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:37.478Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:37.478Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:37.538Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:37.539Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:37.595Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:37.595Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:00:37.708Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:00:37.708Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T07:00:37.821Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:00:37.822Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:37.879Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:37.880Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:37.939Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:37.939Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:37.996Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:37.996Z"}
{"level":"debug","message":"Query: DELETE FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) RETURNING \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\"","timestamp":"2025-05-22T07:00:38.110Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:00:38.111Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:38.168Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:38.168Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:41.787Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:00:41.787Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:41.844Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:41.845Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:00:41.959Z"}
{"level":"debug","message":"Duration: 115ms","timestamp":"2025-05-22T07:00:41.960Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:42.016Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:42.016Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:42.075Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:42.076Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:42.132Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:42.132Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE 1=1 OFFSET $1","timestamp":"2025-05-22T07:00:42.245Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:00:42.245Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T07:00:42.358Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T07:00:42.358Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:42.415Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:42.415Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:46.671Z"}
{"level":"debug","message":"Duration: 60ms","timestamp":"2025-05-22T07:00:46.672Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:46.728Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:46.728Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:00:46.842Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:00:46.842Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:46.899Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:46.899Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:46.959Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:46.959Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:47.015Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:47.015Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:00:47.127Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T07:00:47.128Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T07:00:47.240Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T07:00:47.241Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:47.297Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:47.297Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:47.355Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:47.356Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:47.411Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:00:47.411Z"}
{"level":"debug","message":"Query: DELETE FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) RETURNING \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\"","timestamp":"2025-05-22T07:00:47.524Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:00:47.525Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:47.582Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:47.582Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T07:00:52.609Z"}
{"level":"debug","message":"Duration: 100ms","timestamp":"2025-05-22T07:00:52.609Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:52.667Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:00:52.668Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:52.724Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:52.725Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:00:52.849Z"}
{"level":"debug","message":"Duration: 124ms","timestamp":"2025-05-22T07:00:52.850Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:52.906Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:52.906Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:52.966Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:00:52.967Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:53.023Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:53.023Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE 1=1 OFFSET $1","timestamp":"2025-05-22T07:00:53.136Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:00:53.136Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T07:00:53.252Z"}
{"level":"debug","message":"Duration: 116ms","timestamp":"2025-05-22T07:00:53.253Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:53.311Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:00:53.311Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:56.491Z"}
{"level":"debug","message":"Duration: 60ms","timestamp":"2025-05-22T07:00:56.492Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:56.550Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:00:56.551Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:00:56.665Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:00:56.665Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:56.722Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:56.722Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:56.782Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:00:56.782Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:56.842Z"}
{"level":"debug","message":"Duration: 59ms","timestamp":"2025-05-22T07:00:56.842Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:00:56.956Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:00:56.957Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T07:00:57.076Z"}
{"level":"debug","message":"Duration: 119ms","timestamp":"2025-05-22T07:00:57.077Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:57.133Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:00:57.134Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:00:57.193Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:00:57.194Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:00:57.252Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:00:57.252Z"}
{"level":"debug","message":"Query: DELETE FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) RETURNING \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\"","timestamp":"2025-05-22T07:00:57.366Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:00:57.366Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:00:57.424Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:00:57.424Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:00.645Z"}
{"level":"debug","message":"Duration: 60ms","timestamp":"2025-05-22T07:01:00.645Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:00.701Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:00.702Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:01:00.816Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:01:00.817Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:00.873Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:01:00.873Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:00.932Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:00.932Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:00.988Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:00.988Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE 1=1 OFFSET $1","timestamp":"2025-05-22T07:01:01.102Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:01:01.102Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T07:01:01.216Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:01:01.216Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:01.281Z"}
{"level":"debug","message":"Duration: 65ms","timestamp":"2025-05-22T07:01:01.282Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T07:01:07.752Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:07.753Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:07.810Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:07.811Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:07.868Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:07.868Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:01:07.982Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:01:07.982Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:08.039Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:08.039Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:08.100Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:01:08.100Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:08.156Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:08.157Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:01:08.269Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T07:01:08.270Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T07:01:08.383Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:01:08.383Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:08.439Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:08.440Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:08.499Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:01:08.499Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:08.557Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:01:08.557Z"}
{"level":"debug","message":"Query: DELETE FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) RETURNING \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\"","timestamp":"2025-05-22T07:01:08.672Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:01:08.672Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:08.730Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:01:08.730Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:14.069Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:01:14.069Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:14.126Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:14.126Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:01:14.240Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:01:14.241Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:14.297Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:14.297Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:14.355Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:14.355Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:14.411Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:14.411Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE 1=1 OFFSET $1","timestamp":"2025-05-22T07:01:14.525Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:01:14.525Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T07:01:14.641Z"}
{"level":"debug","message":"Duration: 115ms","timestamp":"2025-05-22T07:01:14.641Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:14.698Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:14.698Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:22.824Z"}
{"level":"debug","message":"Duration: 125ms","timestamp":"2025-05-22T07:01:22.825Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:23.015Z"}
{"level":"debug","message":"Duration: 190ms","timestamp":"2025-05-22T07:01:23.015Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:01:23.246Z"}
{"level":"debug","message":"Duration: 231ms","timestamp":"2025-05-22T07:01:23.247Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:23.303Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:23.303Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T07:01:23.535Z"}
{"level":"debug","message":"Duration: 229ms","timestamp":"2025-05-22T07:01:23.535Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:23.593Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:23.593Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:23.649Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:23.649Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:01:23.762Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:01:23.763Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T07:01:23.877Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:01:23.877Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:23.936Z"}
{"level":"debug","message":"Duration: 59ms","timestamp":"2025-05-22T07:01:23.936Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:24.000Z"}
{"level":"debug","message":"Duration: 62ms","timestamp":"2025-05-22T07:01:24.001Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:24.057Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:24.058Z"}
{"level":"debug","message":"Query: DELETE FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) RETURNING \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\"","timestamp":"2025-05-22T07:01:24.173Z"}
{"level":"debug","message":"Duration: 115ms","timestamp":"2025-05-22T07:01:24.173Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:24.230Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:24.231Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:28.722Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:28.722Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:28.780Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:28.780Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:01:28.896Z"}
{"level":"debug","message":"Duration: 115ms","timestamp":"2025-05-22T07:01:28.896Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:28.953Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:28.953Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:29.014Z"}
{"level":"debug","message":"Duration: 59ms","timestamp":"2025-05-22T07:01:29.014Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:29.071Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:29.071Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE 1=1 OFFSET $1","timestamp":"2025-05-22T07:01:29.184Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:01:29.185Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:29.241Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:29.242Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:33.249Z"}
{"level":"debug","message":"Duration: 59ms","timestamp":"2025-05-22T07:01:33.249Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:33.305Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:33.305Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:01:33.420Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:01:33.420Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:33.477Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:33.477Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:01:33.537Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:33.537Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:01:33.594Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:01:33.594Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE (\"public\".\"root_certificates\".\"root_certificate_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:01:33.707Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:01:33.707Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:01:33.764Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:01:33.765Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:15:50.801Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:16:28.650Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:16:45.333Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:16:52.206Z"}
{"level":"debug","message":"Duration: 175ms","timestamp":"2025-05-22T07:16:52.207Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:16:52.271Z"}
{"level":"debug","message":"Duration: 64ms","timestamp":"2025-05-22T07:16:52.272Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:16:52.399Z"}
{"level":"debug","message":"Duration: 127ms","timestamp":"2025-05-22T07:16:52.400Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:16:52.463Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T07:16:52.463Z"}
{"level":"error","message":"[POST] /api/v1/root/certificate >> 500: Unexpected field","stack":"MulterError: Unexpected field\n    at wrappedFileFilter (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer/index.js:40:19)\n    at Multipart.<anonymous> (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer/lib/make-middleware.js:109:7)\n    at Multipart.emit (node:events:518:28)\n    at Multipart.emit (node:domain:489:12)\n    at HeaderParser.cb (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:358:14)\n    at HeaderParser.push (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:162:20)\n    at SBMH.ssCb [as _cb] (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:394:37)\n    at feed (/home/rekasa/Projects/Kloudtrack/server/node_modules/streamsearch/lib/sbmh.js:219:14)\n    at SBMH.push (/home/rekasa/Projects/Kloudtrack/server/node_modules/streamsearch/lib/sbmh.js:104:16)\n    at Multipart._write (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:567:19)","timestamp":"2025-05-22T07:16:52.475Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:17:39.332Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:17:40.932Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:17:40.933Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:17:40.989Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:17:40.990Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:17:41.101Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T07:17:41.102Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:17:41.157Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:17:41.158Z"}
{"level":"error","message":"[POST] /api/v1/root/certificate >> 500: Unexpected field","stack":"MulterError: Unexpected field\n    at wrappedFileFilter (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer/index.js:40:19)\n    at Multipart.<anonymous> (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer/lib/make-middleware.js:109:7)\n    at Multipart.emit (node:events:518:28)\n    at Multipart.emit (node:domain:489:12)\n    at HeaderParser.cb (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:358:14)\n    at HeaderParser.push (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:162:20)\n    at SBMH.ssCb [as _cb] (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:394:37)\n    at feed (/home/rekasa/Projects/Kloudtrack/server/node_modules/streamsearch/lib/sbmh.js:219:14)\n    at SBMH.push (/home/rekasa/Projects/Kloudtrack/server/node_modules/streamsearch/lib/sbmh.js:104:16)\n    at Multipart._write (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:567:19)","timestamp":"2025-05-22T07:17:41.169Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:22:07.394Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:22:26.792Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:22:29.916Z"}
{"level":"debug","message":"Duration: 156ms","timestamp":"2025-05-22T07:22:29.917Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:22:29.972Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:22:29.973Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:22:30.106Z"}
{"level":"debug","message":"Duration: 133ms","timestamp":"2025-05-22T07:22:30.107Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:22:30.163Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:22:30.163Z"}
{"level":"error","message":"[POST] /api/v1/root/certificate >> 500: Unexpected field","stack":"MulterError: Unexpected field\n    at wrappedFileFilter (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer/index.js:40:19)\n    at Multipart.<anonymous> (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer/lib/make-middleware.js:109:7)\n    at Multipart.emit (node:events:518:28)\n    at Multipart.emit (node:domain:489:12)\n    at HeaderParser.cb (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:358:14)\n    at HeaderParser.push (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:162:20)\n    at SBMH.ssCb [as _cb] (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:394:37)\n    at feed (/home/rekasa/Projects/Kloudtrack/server/node_modules/streamsearch/lib/sbmh.js:219:14)\n    at SBMH.push (/home/rekasa/Projects/Kloudtrack/server/node_modules/streamsearch/lib/sbmh.js:104:16)\n    at Multipart._write (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:567:19)","timestamp":"2025-05-22T07:22:30.174Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T07:23:08.621Z"}
{"level":"debug","message":"Duration: 156ms","timestamp":"2025-05-22T07:23:08.622Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:23:08.679Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:23:08.679Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:23:08.735Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:23:08.736Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:23:08.849Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:23:08.849Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:23:08.905Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:23:08.905Z"}
{"level":"error","message":"[POST] /api/v1/root/certificate >> 500: EACCES: permission denied, mkdir '/certificates'","stack":"Error: EACCES: permission denied, mkdir '/certificates'\n    at Object.mkdirSync (node:fs:1364:26)\n    at RootCertificateUploadService.getDiskDestination (/home/rekasa/Projects/Kloudtrack/server/dist/modules/root-certificate/upload.js:48:30)\n    at DiskStorage._handleFile (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer/storage/disk.js:31:8)\n    at /home/rekasa/Projects/Kloudtrack/server/node_modules/multer/lib/make-middleware.js:139:17\n    at fileFilter (/home/rekasa/Projects/Kloudtrack/server/dist/modules/root-certificate/upload.js:71:17)\n    at wrappedFileFilter (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer/index.js:44:7)\n    at Multipart.<anonymous> (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer/lib/make-middleware.js:109:7)\n    at Multipart.emit (node:events:518:28)\n    at Multipart.emit (node:domain:489:12)\n    at HeaderParser.cb (/home/rekasa/Projects/Kloudtrack/server/node_modules/busboy/lib/types/multipart.js:358:14)","timestamp":"2025-05-22T07:23:08.910Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:26:26.987Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:26:30.489Z"}
{"level":"debug","message":"Duration: 60ms","timestamp":"2025-05-22T07:26:30.489Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:26:30.544Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:26:30.544Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:26:30.656Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T07:26:30.657Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:26:30.712Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:26:30.712Z"}
{"level":"error","message":"[POST] /api/v1/root/certificate >> 500: Invalid Certificate Type - Only Root CA files are allowed","stack":"Error: Invalid Certificate Type - Only Root CA files are allowed\n    at RootCertificateUploadService.generateS3Key (/home/rekasa/Projects/Kloudtrack/server/dist/modules/root-certificate/upload.js:33:33)\n    at /home/rekasa/Projects/Kloudtrack/server/node_modules/run-parallel/index.js:46:7\n    at Array.forEach (<anonymous>)\n    at runParallel (/home/rekasa/Projects/Kloudtrack/server/node_modules/run-parallel/index.js:45:11)\n    at collect (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer-s3/index.js:70:3)\n    at S3Storage._handleFile (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer-s3/index.js:187:3)\n    at /home/rekasa/Projects/Kloudtrack/server/node_modules/multer/lib/make-middleware.js:139:17\n    at fileFilter (/home/rekasa/Projects/Kloudtrack/server/dist/modules/root-certificate/upload.js:71:17)\n    at wrappedFileFilter (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer/index.js:44:7)\n    at Multipart.<anonymous> (/home/rekasa/Projects/Kloudtrack/server/node_modules/multer/lib/make-middleware.js:109:7)","timestamp":"2025-05-22T07:26:30.724Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:26:42.995Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:26:47.291Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:26:52.065Z"}
{"level":"debug","message":"Duration: 131ms","timestamp":"2025-05-22T07:26:52.065Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:26:52.120Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:26:52.121Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:26:52.234Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:26:52.235Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:26:52.290Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:26:52.291Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:26:52.730Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:26:52.730Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:26:52.785Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:26:52.786Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE \"public\".\"root_certificates\".\"certificate_status\" = CAST($1::text AS \"public\".\"certificate_status_enum\") LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:26:52.899Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:26:52.899Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:26:52.955Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:26:52.956Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T07:28:43.570Z"}
{"level":"debug","message":"Duration: 92ms","timestamp":"2025-05-22T07:28:43.570Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:28:43.627Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:28:43.628Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:28:43.683Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:28:43.683Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:28:43.797Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:28:43.797Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:28:43.851Z"}
{"level":"debug","message":"Duration: 54ms","timestamp":"2025-05-22T07:28:43.852Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:28:44.240Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:28:44.240Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:28:44.297Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:28:44.298Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE \"public\".\"root_certificates\".\"certificate_status\" = CAST($1::text AS \"public\".\"certificate_status_enum\") LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:28:44.412Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T07:28:44.412Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:28:44.469Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:28:44.470Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:31:20.386Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:32:53.048Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:32:56.505Z"}
{"level":"debug","message":"Duration: 58ms","timestamp":"2025-05-22T07:32:56.506Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:32:56.565Z"}
{"level":"debug","message":"Duration: 61ms","timestamp":"2025-05-22T07:32:56.566Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:32:56.690Z"}
{"level":"debug","message":"Duration: 124ms","timestamp":"2025-05-22T07:32:56.691Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:32:56.746Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:32:56.747Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:32:57.173Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:32:57.173Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:32:57.228Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:32:57.229Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE \"public\".\"root_certificates\".\"certificate_status\" = CAST($1::text AS \"public\".\"certificate_status_enum\") LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:32:57.345Z"}
{"level":"debug","message":"Duration: 116ms","timestamp":"2025-05-22T07:32:57.345Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:32:57.402Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:32:57.402Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:33:30.613Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T07:35:23.236Z"}
{"level":"debug","message":"Duration: 91ms","timestamp":"2025-05-22T07:35:23.237Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:35:23.293Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:35:23.295Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:35:23.351Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:35:23.353Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:35:23.465Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:35:23.465Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:35:23.522Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:35:23.524Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:35:24.013Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:35:24.014Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:35:24.070Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:35:24.070Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE \"public\".\"root_certificates\".\"certificate_status\" = CAST($1::text AS \"public\".\"certificate_status_enum\") LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:35:24.183Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:35:24.184Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:35:24.240Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:35:24.241Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:35:28.777Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T07:35:28.777Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:35:28.833Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:35:28.833Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:35:28.946Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T07:35:28.946Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:35:29.002Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:35:29.002Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:35:29.183Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:35:29.183Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:35:29.239Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:35:29.239Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE \"public\".\"root_certificates\".\"certificate_status\" = CAST($1::text AS \"public\".\"certificate_status_enum\") LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:35:29.352Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T07:35:29.353Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:35:29.407Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T07:35:29.408Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:35:33.075Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:35:37.451Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T07:35:37.451Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:35:37.514Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T07:35:37.514Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:35:37.643Z"}
{"level":"debug","message":"Duration: 128ms","timestamp":"2025-05-22T07:35:37.643Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:35:37.707Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T07:35:37.707Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:35:38.101Z"}
{"level":"debug","message":"Duration: 64ms","timestamp":"2025-05-22T07:35:38.101Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:35:38.164Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T07:35:38.165Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE \"public\".\"root_certificates\".\"certificate_status\" = CAST($1::text AS \"public\".\"certificate_status_enum\") LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:35:38.295Z"}
{"level":"debug","message":"Duration: 129ms","timestamp":"2025-05-22T07:35:38.295Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:35:38.358Z"}
{"level":"debug","message":"Duration: 63ms","timestamp":"2025-05-22T07:35:38.359Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:54:01.074Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:54:04.923Z"}
{"level":"debug","message":"Duration: 76ms","timestamp":"2025-05-22T07:54:04.923Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:54:04.980Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:54:04.980Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:54:05.094Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T07:54:05.094Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:54:05.150Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T07:54:05.150Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:54:05.919Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:54:13.353Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:13.353Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:54:13.401Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:13.402Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:54:13.499Z"}
{"level":"debug","message":"Duration: 97ms","timestamp":"2025-05-22T07:54:13.500Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:54:13.548Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:13.548Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:54:14.024Z"}
{"level":"debug","message":"Duration: 77ms","timestamp":"2025-05-22T07:54:14.025Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:54:14.073Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:14.074Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE \"public\".\"root_certificates\".\"certificate_status\" = CAST($1::text AS \"public\".\"certificate_status_enum\") LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:54:14.170Z"}
{"level":"debug","message":"Duration: 96ms","timestamp":"2025-05-22T07:54:14.171Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:54:14.219Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:14.219Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:54:14.364Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:14.365Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:54:14.412Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:14.412Z"}
{"level":"debug","message":"Query: INSERT INTO \"public\".\"root_certificates\" (\"path\",\"version\",\"certificate_status\",\"uploaded_by_user_id\",\"created_at\",\"updated_at\") VALUES ($1,$2,CAST($3::text AS \"public\".\"certificate_status_enum\"),$4,$5,$6) RETURNING \"public\".\"root_certificates\".\"root_certificate_id\"","timestamp":"2025-05-22T07:54:14.512Z"}
{"level":"debug","message":"Duration: 99ms","timestamp":"2025-05-22T07:54:14.512Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE \"public\".\"root_certificates\".\"root_certificate_id\" = $1 LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:54:14.609Z"}
{"level":"debug","message":"Duration: 96ms","timestamp":"2025-05-22T07:54:14.609Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T07:54:14.705Z"}
{"level":"debug","message":"Duration: 95ms","timestamp":"2025-05-22T07:54:14.706Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:54:14.754Z"}
{"level":"debug","message":"Duration: 49ms","timestamp":"2025-05-22T07:54:14.755Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T07:54:36.176Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:36.176Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:54:36.224Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:36.225Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:54:36.277Z"}
{"level":"debug","message":"Duration: 53ms","timestamp":"2025-05-22T07:54:36.278Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T07:54:36.375Z"}
{"level":"debug","message":"Duration: 97ms","timestamp":"2025-05-22T07:54:36.376Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:54:36.423Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:36.424Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T07:54:36.474Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:36.475Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T07:54:36.523Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T07:54:36.523Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"root_certificates\".\"root_certificate_id\", \"public\".\"root_certificates\".\"path\", \"public\".\"root_certificates\".\"version\", \"public\".\"root_certificates\".\"certificate_status\"::text, \"public\".\"root_certificates\".\"uploaded_by_user_id\", \"public\".\"root_certificates\".\"created_at\", \"public\".\"root_certificates\".\"updated_at\" FROM \"public\".\"root_certificates\" WHERE 1=1 OFFSET $1","timestamp":"2025-05-22T07:54:36.619Z"}
{"level":"debug","message":"Duration: 96ms","timestamp":"2025-05-22T07:54:36.620Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"role\"::text FROM \"public\".\"users\" WHERE \"public\".\"users\".\"user_id\" IN ($1) OFFSET $2","timestamp":"2025-05-22T07:54:36.715Z"}
{"level":"debug","message":"Duration: 95ms","timestamp":"2025-05-22T07:54:36.715Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T07:54:36.763Z"}
{"level":"debug","message":"Duration: 47ms","timestamp":"2025-05-22T07:54:36.763Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:56:19.829Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T07:58:36.123Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:04:31.868Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:04:55.473Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:05:03.320Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:06:45.213Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:06:49.767Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:06:51.925Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:41:32.235Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:41:37.152Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T08:41:40.204Z"}
{"level":"debug","message":"Duration: 70ms","timestamp":"2025-05-22T08:41:40.204Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T08:41:40.260Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T08:41:40.261Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"email\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T08:41:40.373Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T08:41:40.374Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T08:41:40.429Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T08:41:40.429Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T08:43:50.946Z"}
{"level":"debug","message":"Duration: 59ms","timestamp":"2025-05-22T08:43:50.946Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:22:69\n\n  19     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  20 }\n  21 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 22 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","target":"user.findUnique","timestamp":"2025-05-22T08:43:50.957Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T08:44:09.474Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T08:44:09.474Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T08:44:09.532Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T08:44:09.532Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T08:44:09.588Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T08:44:09.588Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T08:44:09.703Z"}
{"level":"debug","message":"Duration: 114ms","timestamp":"2025-05-22T08:44:09.703Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T08:44:09.760Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T08:44:09.760Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:22:69\n\n  19     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  20 }\n  21 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 22 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","target":"user.findUnique","timestamp":"2025-05-22T08:44:21.163Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T08:44:50.195Z"}
{"level":"debug","message":"Duration: 137ms","timestamp":"2025-05-22T08:44:50.195Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:22:69\n\n  19     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  20 }\n  21 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 22 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","target":"user.findUnique","timestamp":"2025-05-22T08:44:50.197Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T08:45:11.538Z"}
{"level":"debug","message":"Duration: 60ms","timestamp":"2025-05-22T08:45:11.538Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T08:45:11.596Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T08:45:11.597Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T08:45:11.652Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T08:45:11.653Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"email\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T08:45:11.765Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T08:45:11.766Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T08:45:11.822Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T08:45:11.822Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:22:69\n\n  19     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  20 }\n  21 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 22 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","target":"user.findUnique","timestamp":"2025-05-22T08:45:25.387Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:47:27.676Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:47:33.987Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:47:44.035Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:48:02.521Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:22:69\n\n  19     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  20 }\n  21 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 22 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","target":"user.findUnique","timestamp":"2025-05-22T08:48:09.208Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T08:48:13.111Z"}
{"level":"debug","message":"Duration: 125ms","timestamp":"2025-05-22T08:48:13.112Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T08:48:13.168Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T08:48:13.168Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"email\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T08:48:13.281Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T08:48:13.282Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T08:48:13.336Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T08:48:13.337Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T08:48:26.255Z"}
{"level":"debug","message":"Duration: 84ms","timestamp":"2025-05-22T08:48:26.256Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:22:69\n\n  19     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  20 }\n  21 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 22 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","target":"user.findUnique","timestamp":"2025-05-22T08:48:26.258Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:48:47.011Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:48:58.465Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T08:49:30.090Z"}
{"level":"debug","message":"Duration: 49ms","timestamp":"2025-05-22T08:49:30.091Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T08:49:30.140Z"}
{"level":"debug","message":"Duration: 49ms","timestamp":"2025-05-22T08:49:30.141Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T08:49:30.189Z"}
{"level":"debug","message":"Duration: 48ms","timestamp":"2025-05-22T08:49:30.190Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"email\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T08:49:30.287Z"}
{"level":"debug","message":"Duration: 97ms","timestamp":"2025-05-22T08:49:30.287Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T08:49:30.335Z"}
{"level":"debug","message":"Duration: 47ms","timestamp":"2025-05-22T08:49:30.336Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T08:49:47.181Z"}
{"level":"debug","message":"Duration: 52ms","timestamp":"2025-05-22T08:49:47.181Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:22:69\n\n  19     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  20 }\n  21 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 22 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","target":"user.findUnique","timestamp":"2025-05-22T08:49:47.191Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:50:14.130Z"}
{"level":"error","message":"Database error: \nInvalid `database_config_1.prisma.user.findUnique()` invocation in\n/home/rekasa/Projects/Kloudtrack/server/dist/core/middlewares/auth.middleware.js:22:69\n\n  19     return next(new error_1.AppError(\"You are not logged in. Please log in to get access.\", 401));\n  20 }\n  21 const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);\n→ 22 const currentUser = await database_config_1.prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   userName?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   firstName?: StringNullableFilter | String | Null,\n     ?   lastName?: StringNullableFilter | String | Null,\n     ?   role?: EnumRoleFilter | Role,\n     ?   password?: StringFilter | String,\n     ?   phone?: StringNullableFilter | String | Null,\n     ?   profilePicture?: StringNullableFilter | String | Null,\n     ?   createdByUserId?: IntNullableFilter | Int | Null,\n     ?   passwordChangedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   createdBy?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n     ?   createdUsers?: UserListRelationFilter,\n     ?   userOrganizations?: UserOrganizationListRelationFilter,\n     ?   command?: CommandListRelationFilter,\n     ?   station?: StationListRelationFilter,\n     ?   rootCertificate?: RootCertificateListRelationFilter,\n     ?   problemReport?: ProblemReportListRelationFilter,\n     ?   stationCertificate?: StationCertificateListRelationFilter,\n     ?   resetToken?: ResetTokenListRelationFilter\n       },\n       select: {\n         id: true,\n         email: true,\n         role: true,\n         passwordChangedAt: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `userName` or `email` arguments. Available options are marked with ?.","target":"user.findUnique","timestamp":"2025-05-22T08:50:17.461Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T08:50:21.450Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T08:50:21.452Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T08:50:21.506Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T08:50:21.507Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"email\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T08:50:21.620Z"}
{"level":"debug","message":"Duration: 113ms","timestamp":"2025-05-22T08:50:21.621Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T08:50:21.677Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T08:50:21.677Z"}
{"level":"debug","message":"Query: SELECT 1","timestamp":"2025-05-22T08:50:44.724Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T08:50:44.724Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T08:50:44.780Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T08:50:44.781Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T08:50:44.836Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T08:50:44.836Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password_changed_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T08:50:44.949Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T08:50:44.949Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T08:50:45.005Z"}
{"level":"debug","message":"Duration: 56ms","timestamp":"2025-05-22T08:50:45.006Z"}
{"level":"debug","message":"Query: BEGIN","timestamp":"2025-05-22T08:50:45.066Z"}
{"level":"debug","message":"Duration: 57ms","timestamp":"2025-05-22T08:50:45.066Z"}
{"level":"debug","message":"Query: DEALLOCATE ALL","timestamp":"2025-05-22T08:50:45.121Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T08:50:45.122Z"}
{"level":"debug","message":"Query: SELECT \"public\".\"users\".\"user_id\", \"public\".\"users\".\"user_name\", \"public\".\"users\".\"first_name\", \"public\".\"users\".\"last_name\", \"public\".\"users\".\"email\", \"public\".\"users\".\"role\"::text, \"public\".\"users\".\"password\", \"public\".\"users\".\"phone\", \"public\".\"users\".\"profile_picture\", \"public\".\"users\".\"created_by_user_id\", \"public\".\"users\".\"password_changed_at\", \"public\".\"users\".\"created_at\", \"public\".\"users\".\"updated_at\" FROM \"public\".\"users\" WHERE (\"public\".\"users\".\"user_id\" = $1 AND 1=1) LIMIT $2 OFFSET $3","timestamp":"2025-05-22T08:50:45.234Z"}
{"level":"debug","message":"Duration: 112ms","timestamp":"2025-05-22T08:50:45.235Z"}
{"level":"debug","message":"Query: COMMIT","timestamp":"2025-05-22T08:50:45.290Z"}
{"level":"debug","message":"Duration: 55ms","timestamp":"2025-05-22T08:50:45.290Z"}
{"level":"info","message":"Database info: Starting a postgresql pool with 17 connections in PgBouncer mode.","target":"quaint::pooled","timestamp":"2025-05-22T08:51:44.533Z"}
